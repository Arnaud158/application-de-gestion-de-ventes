/*
 * La configuration de Gradle pour compiler et exécuter le projet.
 */

// Les plugins permettant à Gradle de gérer le projet en tant qu'application JavaFX.
plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.11'
}

// Les dépôts d'où les dépendances doivent être téléchargées.
repositories {
    mavenCentral()
}

// La version du langage Java utilisée dans le projet.
sourceCompatibility = '17'
targetCompatibility = '17'

// Le nom de la classe contenant la méthode "main".
// Notez que le paquetage complet doit être spécifié.
application {
	// Application gestion-ventes (IHM)
    
    mainClass = 'sae.application.EcranAccueilApplication'
    
	// Reseau routier (graphes)
	
	// mainClass = 'reseau.graph.ShowGraphApp'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    implementation 'org.jgrapht:jgrapht-core:1.5.1'
    implementation 'org.jgrapht:jgrapht-io:1.5.1'
    implementation 'org.jgrapht:jgrapht-ext:1.5.1'
    implementation 'com.github.vlsi.mxgraph:jgraphx:4.2.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'
    implementation 'net.bytebuddy:byte-buddy:1.12.10'
    testImplementation 'net.bytebuddy:byte-buddy-agent:1.12.10'
    testImplementation 'org.objenesis:objenesis:3.2'
}

test {
    useJUnitPlatform()
}

// La version de JavaFX utilisée dans le projet, et les composants requis.
javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.swing']
}
